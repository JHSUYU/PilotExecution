public class org.example.TraceUtil extends java.lang.Object
{
    com.rits.cloning.Cloner cloner;
    private static java.util.Map stateMap;

    public void <init>()
    {
        com.rits.cloning.Cloner $r1;
        org.example.TraceUtil r0;

        r0 := @this: org.example.TraceUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.rits.cloning.Cloner;

        specialinvoke $r1.<com.rits.cloning.Cloner: void <init>()>();

        r0.<org.example.TraceUtil: com.rits.cloning.Cloner cloner> = $r1;

        return;
    }

    public static void recordState(java.lang.String, java.util.HashMap)
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r0, r1;
        java.util.Map $r5;
        java.lang.Object $r6, $r8, $r10;
        java.lang.String r4, r9;
        boolean $z0;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.HashMap;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r10);

        goto label1;

     label2:
        $r5 = <org.example.TraceUtil: java.util.Map stateMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r4, $r0);

        return;
    }

    public static java.util.Map getState(java.lang.String)
    {
        java.util.Map $r1, r3;
        java.lang.Object $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.example.TraceUtil: java.util.Map stateMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.util.Map) $r2;

        return r3;
    }

    public static void clearStates()
    {
        java.util.Map $r0;

        $r0 = <org.example.TraceUtil: java.util.Map stateMap>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.example.TraceUtil: java.util.Map stateMap> = $r0;

        return;
    }
}

public class org.example.ShadowMicroFork extends java.lang.Thread
{
    int field1;
    boolean field2;
    int field3;

    void <init>(int, boolean, int)
    {
        int i0, i1;
        org.example.ShadowMicroFork r0;
        boolean z0;

        r0 := @this: org.example.ShadowMicroFork;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<org.example.ShadowMicroFork: int field1> = i0;

        r0.<org.example.ShadowMicroFork: boolean field2> = z0;

        r0.<org.example.ShadowMicroFork: int field3> = i1;

        return;
    }

    public void run()
    {
        int $i0, $i1, $i2, $i3;
        org.example.ShadowMicroFork r0;
        boolean $z0, $z1;

        r0 := @this: org.example.ShadowMicroFork;

        $i0 = r0.<org.example.ShadowMicroFork: int field1>;

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.example.ShadowMicroFork: boolean field2> = $z1;

        $i1 = r0.<org.example.ShadowMicroFork: int field3>;

        $i2 = $i1 + 2;

        r0.<org.example.ShadowMicroFork: int field1> = $i2;

        $i3 = r0.<org.example.ShadowMicroFork: int field1>;

        $z0 = r0.<org.example.ShadowMicroFork: boolean field2>;

        virtualinvoke r0.<org.example.ShadowMicroFork: int func1(int,boolean)>($i3, $z0);

        return;
    }

    public int func1(int, boolean)
    {
        int i0, i1;
        org.example.ShadowMicroFork r0;
        boolean z0;

        r0 := @this: org.example.ShadowMicroFork;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        i1 = i0 + 1;

        goto label2;

     label1:
        i1 = i0 - 1;

     label2:
        return i1;
    }

    public void func2(int, boolean)
    {
        int i0;
        boolean z0;
        org.example.ShadowMicroFork r0;

        r0 := @this: org.example.ShadowMicroFork;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        goto label1;

     label1:
        return;
    }
}
